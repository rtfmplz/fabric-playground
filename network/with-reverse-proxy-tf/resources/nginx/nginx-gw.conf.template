user nginx;
worker_processes auto;

error_log /var/log/nginx/error.log info;
pid /var/run/nginx.pid;

events {
	use epoll;
	worker_connections 4096;
}

stream {
	log_format stream_routing	'[$time_local] $status '
								'$remote_addr:$remote_port '
								'-> $server_addr:$server_port'
								'-> "$ssl_preread_server_name" ($upstream_addr) '
								'pid=$pid *$connection';

	access_log /var/log/nginx/access.log stream_routing;

	# outbound
	
	# TCP proxy (TLS Passthrough)
	server {
		listen 7051 reuseport so_keepalive=90s::10;
		
		# TLS SNI
		ssl_preread on;

		# proxy to upstream
		proxy_pass $selected_outbound_stream;
		proxy_socket_keepalive on;
		proxy_connect_timeout 10s;
		proxy_timeout 3m;
	}

	# upstreams by TLS SNI
	map $ssl_preread_server_name $selected_outbound_stream {
		~*orderer[0-9].ordererorg upstream_orderer_gw;
		~*peer[0-9].org1 upstream_org1_gw;
	}

	# upstream upstream_orderer_gw {
	#	server ${NGX_ORDERER_GW_IP}:57050;
	# }

	# upstream upstream_org1_gw {
	#	server ${NGX_ORG1_GW_IP}:57051;
	# }

	# inbound

	# TCP Proxy (TLS Passthrough)
	server {
		listen 57050-57051 reuseport so_keepalive=90s::10;

		#allow ${ALLOW_IP}
		#deny all;

		ssl_preread on;
		
		# proxy to upstream
		proxy_pass $selected_inbound_stream;
		proxy_socket_keepalive on;
		proxy_connect_timeout 3s;
		proxy_timeout 3m;
	}

	map $ssl_preread_server_name $selected_inbound_stream {
		~*peer(?<no>[0-9]) upstream_org3_peer$no;
	}

	upstream upstream_org3_peer0 {
		server ${NGX_ORG3_PEER0_IP}:7051;
	}


	upstream upstream_org3_peer1 {
		server ${NGX_ORG3_PEER1_IP}:7051;
	}

}

http {
	server_tokens off;

	server {
		listen 57999;


		location /health {
			access_log off;
			default_type text/plain;
			return 200 "OK";
		}

		location /status {
			access_log off;
			stub_status;
		}

		location / {
			return 444;
		}
	}


}

