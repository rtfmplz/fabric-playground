version: "2"

networks:
  default:
    external:
      name: ${DOCKER_NETWORK}

##########################################
services:
  cli:
    extends:
      file: ${BASE_DOCKER_COMPOSE_PATH}/cli.yaml
      service: cli
    container_name: cli
    depends_on:
      - orderer1.ordererorg
      - peer1.org1
      - peer2.org1
    networks:
      - default

##########################################
  fabric-ca:
    extends:
      file: ${BASE_DOCKER_COMPOSE_PATH}/fabric-ca.yaml
      service: fabric-ca
    container_name: fabric-ca
    environment:
      - FABRIC_CA_SERVER_CA_KEYFILE=/etc/hyperledger/fabric-ca-server-config/${FABRIC_CA_SERVER_CA_KEYFILE}
    networks:
      - default

##########################################
  orderer1.ordererorg:
    extends:
      file: ${BASE_DOCKER_COMPOSE_PATH}/orderer.yaml
      service: orderer
    container_name: orderer1
    depends_on:
      - kafka1
    networks:
      - default

  kafka1:
    extends:
      file: ${BASE_DOCKER_COMPOSE_PATH}/kafka.yaml
      service: kafka
    container_name: kafka1
    depends_on:
      - zookeeper1
    networks:
      - default

  zookeeper1:
    extends:
      file: ${BASE_DOCKER_COMPOSE_PATH}/zookeeper.yaml
      service: zookeeper
    container_name: zookeeper1
    networks:
      - default

##########################################
  peer1.org1:
    extends:
      file: ${BASE_DOCKER_COMPOSE_PATH}/peer.yaml
      service: peer1
    container_name: peer1
    depends_on:
      - couchdb1
    networks:
      - default

  peer2.org1:
    extends:
      file: ${BASE_DOCKER_COMPOSE_PATH}/peer.yaml
      service: peer2
    container_name: peer2
    depends_on:
      - couchdb1
    networks:
      - default

  couchdb1:
    extends:
      file: ${BASE_DOCKER_COMPOSE_PATH}/couchdb.yaml
      service: couchdb1
    container_name: couchdb1
    networks:
      - default

  couchdb2:
    extends:
      file: ${BASE_DOCKER_COMPOSE_PATH}/couchdb.yaml
      service: couchdb2
    container_name: couchdb2
    networks:
      - default
