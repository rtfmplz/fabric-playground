version: "3"

networks:
    internet:
    client_net:
    server_net:

services:

    server_gw:
        image: nginx
        volumes:
            - "./greeter_server/nginx/nginx.conf:/etc/nginx/nginx.conf"
            - "./greeter_server/nginx/conf.d:/etc/nginx/conf.d"
        networks:
            server_net:
                aliases:
                    - "greeter.client"
            internet:
                aliases:
                    - "greeter.server.gw"

    client_gw:
        image: nginx
        volumes:
            - "./greeter_client/nginx/nginx.conf:/etc/nginx/nginx.conf"
            - "./greeter_client/nginx/conf.d:/etc/nginx/conf.d"
        networks:
            client_net:
                aliases:
                    - "greeter.server"
            internet:
                aliases:
                    - "greeter.client.gw"
 
    greeter_server:
        build:
            context: .
            dockerfile: ./greeter_server/Dockerfile
        environment:
            - TLS_ENABLE=${TLS}
            - CA_CRT=./certificates/ca.crt
            - SERVER_CRT=./certificates/greeter.server.crt
            - SERVER_KEY=./certificates/greeter.server.key
            - CLIENT_CRT=./certificates/greeter.client.crt
            - CLIENT_KEY=./certificates/greeter.client.key
        networks:
            server_net:
                aliases:
                    - "greeter.server"

    greeter_client:
        build:
            context: .
            dockerfile: ./greeter_client/Dockerfile
        environment:
            - TLS_ENABLE=${TLS}
            - CA_CRT=./certificates/ca.crt
            - SERVER_CRT=./certificates/greeter.server.crt
            - SERVER_KEY=./certificates/greeter.server.key
            - CLIENT_CRT=./certificates/greeter.client.crt
            - CLIENT_KEY=./certificates/greeter.client.key
        networks:
            client_net:
                aliases:
                    - "greeter.client"
        depends_on:
            - greeter_server
